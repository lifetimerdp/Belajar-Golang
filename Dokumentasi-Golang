install golang versi terbaru. Download dan install di website resminya -> https://go.dev/doc/install
Ikuti instruksi yang diberikan di website golang

1. Membuat file golang
   --> buat folder khusus golang
   --> touch hello.go
 
 
 2. Menulis hello world
   --> sudo nano hello.go
   --> isi filenya yaitu:
   ------------------------------
   package main
   
   import "fmt"
   
   func main() {
      fmt.Println("Hello World")
   }
   ------------------------------

   ket: - "package main", dan func main adalah perintah wajib untuk setiap file golang
        - "fmt" digunakan untuk melakukan print
        

3. Jalankan filenya
   --> go run hello.go
   --> perintah "go run namafile.go" hanya direkomendasikan untuk mencoba menjalankan file golang
       yang masih tahap development atau masih dalam tahap uji coba. Jika sudah selesai, kalian
       harus melakukan yang namanya "compile" dan hasil compile filenya yang akan digunakan!!


4. Compile file go
   --> go build hello.go
   --> hasilnya adalah file yang sama, yaitu file dengan nama hello (ekstensi .go telah dihilangkan)


5. Jalankan file go
   --> ./hello atau sudo ./hello


6. Tipe data number di Golang
   --> Terdapat 2 jenis angka di golang:
       - integer: angka biasa 1, 2, 3, 4, dst
       - floating point: angka dengan koma 1.8, 2.5, 6.7
         { titik disitu adalah koma (saya tulis sama seperti format kalkulator, agar lebih mudah) }
         
   --> "Integer" dibagi lagi ke dalam 8 jenis tipe data:
       - int8  : untuk angka -128 sampai maksimumnya 127
       - int16 : untuk angka -32768 sampai maksimumnya 32767
       - int32 : untuk angka -2147483648 sampai maksimumnya 2147483647 (sekitar -2 sekian miliar sampai 2 sekian miliar)
       - int64 : untuk angka -9223372036854775808 sampai maks 9223372036854775807
                 (sekitar -9 sekian Kuantiliun sampai 9 sekian Kuantiliun). Kuantiliun (biasanya disebut angka dengan nol 18),
                 ini sebutan angka diatas kuadtriliun
       - uint8  : untuk angka 0 sampai maks 255
       - uint16 : untuk angka 0 sampai maks 65535
       - uint32 : untuk angka 0 sampai maks 4294967295
       - uint64 : untuk angka 0 sampai maks 18446744073709551615 (sekitar 18 Kuantiliun)
         { Sesuaikan dengan kebutuhan kalian. Misalnya untuk data ujian siswa, gunakan int8 (karena dibawah 127).
           Kalau tidak sesuai, akan membebani kinerja dan jadi sia-sia }
           
   --> "Floating point" dibagi menjadi 4 tipe data:
       - float32     : 1.18 x 10 pangkat -38 maksnya 3.4 x 10 pangkat 38
       - float64     : 2.23 x 10 pangkat -308 maksnya 1.80 x 10 pangkat 308
       - complex64   : nilainya sama dengan float32, tapi umumnya digunakan untuk pertihungan yang kompleks dan terdapat penggambaran (seperti statistik)
       - complex128  : nilainya sama dengan float64, tapi umumnya digunakan untuk pertihungan yang kompleks dan terdapat penggambaran (seperti statistik)


7. Tipe data Boolean di golang
   --> Terdapat 2 jenis data Boolean:
       - true artinya Benar
       - false artinya Salah


8. Tipe data String di golang
   --> string adalah kumpulan karakter (huruf, angka, simbol, dll). Jika kalian ingin mengetahui tipe data string, ciri-cirinya adalah
       setiap data ber-tipe string, pasti menggunakan simbol petik dua diawal dan diakhir. Contoh tipe data string: "Agus beli ikan 5 ekor dipasar"

   --> terdapat beberapa function yang sering digunakan untuk tipe data string, seperti:
       - function len: digunakan untuk menghitung jumlah karakter didalam string.
       
         cara pakai:
         -----------------------------------------------------
         len("Agus beli ikan 5 ekor dipasar")    outputnya: 29
         -----------------------------------------------------
         
         note: spasi juga ikut dihitung
   
   --> cara melacak string lewat angka (di golang, dihitung mulai dari 0 bukan 1)
       - "Agus"[2] outputnya: u  hasilnya "u" bukan "g" karena hitunganya dimulai dari 0
                                 ----------
                                    Agus
                                    0123
                                 ----------
       - "Deni"[3] outputnya: i


9. Variable
   --> variable adalah tempat atau wadah yang digunakan untuk menyimpan data. Di golang setiap variable yang dibuat hanya dapat menyimpan
       satu jenis data yang sama. (Beda dengan bahasa pemrograman lainnya, misalnya javascript, python, dll).
   
   --> cara pakai: var namavariablenya tipe-datanya
       ------------------------------------------
       var agus string
       
       agus = "agus kurnia"
       fmt.Println(agus)   outputnya: agus kurnia
       -------------------------------------------
       
   --> Bisa juga langsung buat variable tanpa perlu di deklarasikan tipe datanya
       ------------------------------------------
       var agus = "agus kurnia"
       fmt.Println(agus)   outputnya: agus kurnia
       ------------------------------------------
       
   --> Untuk tipe data number, lebih baik sebutkan secara spesifik, tipe data apa yang digunakan di variable nya.
       Tujuannya, agar variablenya menggunakan tipe data sesuai nilai minimum dan maksimumnya (alasan lainnya, agar tidak membebani kinerja memori).
       Kalau tidak disebutkan, tipe data integernya akan mengikuti sesuai tipe data koomputer. komputer 32 bit, maka int32
       komputer 64 bit, maka int64.
       ------------------------------------------
       var age uint8 = 27
       fmt.Println(age)    outputnya: 27
       ------------------------------------------
       
   --> Membuat variable tanpa harus menggunakan kata "var" bisa dilakukan jika menggunakan titik dua :
       ----------------------------
       namaku := "agus kurnia"
       fmt.Println(namaku)    outputnya: agus kurnia
       
       namaku = "denny santos"
       fmt.Println(namaku)    outputnya: denny santos
       ----------------------------
       
       - kelemahan menggunakan ini adalah, kita tidak dapat mendeklarasikan tipe datanya. misalnya, age int8 := 18   outputnya: error
       
   --> Multiple variable
       ------------------------------------------------------------------
       var (
         firstname = "agus"
         lastname = "kurnia"
         age = 27
       )
       
       fmt.Println(firstname, lastname, age)    outputnya: agus kurnia 27
       ------------------------------------------------------------------
       
   --> Constant variable
       variable yang tidak dapat diubah jika sudah di deklarasikan. Ini mirip dengan variable constant di python (jika anda pernah mempelajarinya)
       -----------------------------------------
       const namaku = "agus"
       
       // error nilainya jika diubah
       const namaku = "deny"     outputnya: error
       ------------------------------------------
       
   --> Multipe constant variable
       ------------------------------------------------------------------
       const (
         firstname = "deny"
         lastname = "santos"
         age = 19
       )
       
       fmt.Println(firstname, lastname, age)    outputnya: deny santos 19
       ------------------------------------------------------------------

10. Konversi tipe data
      --> Konversi tipe data digunakan untuk mengubah tipe data dari variable tertentu. Misalnya int8 diubah ke int32 atau uint16, dst
          ------------------------------------------------------------------------------
          var statistik1 int8 = 100
          var perbarui_statistik1 int16 = int16(statistik1)   -> nilai maksnya bertambah

          var namaku = "agus"
          var indeks_nama = string(namaku[2])
          fmt.Println(indeks_nama)              outputnya: u
          ------------------------------------------------------------------------------

11. Tipe deklarasi atau type deklarations
      --> tipe deklarasi adalah kemampuan untuk membuat ulang tipe data baru dari tipe data yang sudah ada sebelumnya. Umumnya ini digunakan
          untuk membuat alias (persamaan lain) dari tipe data, dengan tujuan membuat tipe datanya lebih mudah untuk dipahami.

          Contoh: Membuat alias untuk tipe data string, int8, dan boolean
          -------------------------------------
          type karakter string

          cara pakai:
          var namaku karakter = "agus"
          fmt.Println(namaku)    output: agus

          type maks 255 uint8

          var jumlah_siswa maks = 200
          fmt.Println(jumlah_siswa) output: 200
          --------------------------------------

12. Operator matematika
      --> operasi matematika di golang, sama seperti bahasa pemrograman lainnya.

          + untuk penjumlahan
          - untuk pengurangan
          / untuk pembagian
          * untuk perkalian
          % untuk sisa pembagian atau modulus

          ----------------------------------------
          var a = 10
          var b = 20
          var hasil_jumlah = a + b
          fmt.Println(hasil_jumlah)     output: 30

          var a = 2
          var b = 5
          var hasil_kali = a * b
          fmt.Println(hasil_kali)       output: 10
          ----------------------------------------

      --> Menyingkat operasi (berlaku jika variable sebelumnya sudah ada)
          ---------------------------------
          a = 5
          a += 1  ==> sama dengan a = a + 1
          fmt.Println(a)      output: 6

          b = 5
          b -= 1  ==> sama dengan b = b - 1
          fmt.Println(a)      output: 4
          ---------------------------------
       
 13. Unary operator
      --> unary operator adalah cara cepat atau bisa kalian anggap jalan pintas dalam menggunakan operator, yang dimaksud operator adalah seperti
          penjumlahan, pengurangan, negatif, positif, dan kebalikan dari suatu nilai boolean.

          ++ bertambah 1
          -- berkurang 1
          - negatif
          + positif
          ! kebalikan boolen  ==>   !true jika dibaca artinya adalah bukan true (berarti kebalikannya true, yaitu false)
                                    !false jika dibaca artinya adalah bukan false (berarti kebalikannya false, yaitu true)

          ------------------------------
          var a = 10
          fmt.Println(a)      output: 10

          a++
          fmt.Println(a)      output: 11
          ------------------------------

14. Operator Perbandingan
      --> Operator perbandingan adalah kemampuan untuk membandingkan antara satu angka dengan angka lain atau satu kondisi dengan kondisi lainnya.
          
          > lebih dari
          < kurang dari
          >= lebih dari sama dengan
          <= kurang dari sama dengan
          == sama dengan
          != tidak sama dengan
          
          - Nilai yang dihasilkan dari perbandingan akan selalu bernilai boolean, yaitu true atau false
          -------------------------------------------------------------------------------------------------------------
          cara pakai:
          1 > 2   output: false atau salah
          1 < 2   output: true atau benar
          
          12 >= 10   output: true, karena 10 lebih dari 12
          10 >= 10   output: true, karena 10 juga sama dengan 10
          10 >= 12   output: false, karena 10 tidak lebih dari atau tidak sama dengan 12
          
          10 <= 10   output: true, karena 10 juga sama dengan 10
          12 <= 10   output: false, karena 12 tidak lebih dari 12
          10 <= 12   output: true, karena 10 memang kurang dari 12
          
          var nama1 = "agus"
          var nama2 = "agus"
          var apakah_sama = nama1 == nama2
          fmt.Println(apakah_sama)            output: true, karena namanya sama sama agus dan tidak ada perbedaan huruf
          
          var value1 = 10
          var value2 = 20
          var value1_dan_value2 = value1 != value2
          fmt.Println(value1_dan_value2)           output: true, karena value1 (10) tidak sama dengan value2 (20)
          ---------------------------------------------------------------------------------------------------------------
          
